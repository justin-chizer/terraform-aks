name: 'Terraform GitHub Actions'
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - master
env:
  tf_working_dir: './terraform'
  tf_actions_version: 0.13.5
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-18.04
    steps:      
    - name: 'Checkout'
      uses: actions/checkout@v2
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: "chizerkeys"
        secrets: 'CLIENT-ID, CLIENT-SECRET, SUBSCRIPTION-ID, TENANT-ID'
      id: myGetSecretAction
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_actions_version }}
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_actions_version }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
        args: -backend-config=client_id="${{ steps.myGetSecretAction.outputs.CLIENT-ID  }}" -backend-config=client_secret="${{ steps.myGetSecretAction.outputs.CLIENT-SECRET  }}" -backend-config=tenant_id="${{ steps.myGetSecretAction.outputs.TENANT-ID  }}" -backend-config=subscription_id="${{ steps.myGetSecretAction.outputs.SUBSCRIPTION-ID  }}" 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_actions_version }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_actions_version }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
        args: -var=client_secret="${{ steps.myGetSecretAction.outputs.CLIENT-SECRET }}" -var=client_id="${{ steps.myGetSecretAction.outputs.CLIENT-ID }}" -var=subscription_id="${{ steps.myGetSecretAction.outputs.SUBSCRIPTION-ID }}" -var=tenant_id="${{ steps.myGetSecretAction.outputs.TENANT-ID }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Apply'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_actions_version }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: true
        args: -var=client_secret="${{ steps.myGetSecretAction.outputs.CLIENT-SECRET }}" -var=client_id="${{ steps.myGetSecretAction.outputs.CLIENT-ID }}" -var=subscription_id="${{ steps.myGetSecretAction.outputs.SUBSCRIPTION-ID }}" -var=tenant_id="${{ steps.myGetSecretAction.outputs.TENANT-ID }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraformcheck:
    #needs: terraform
    name: 'AZ CLI'
    runs-on: ubuntu-18.04
    steps:
    - name: Azure login  
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Azure CLI check
      uses: azure/CLI@v1
      with:
        azcliversion: 2.3.1
        inlineScript: |
          az group list --query "[?name=='terraformsa']" | jq '.[].properties.provisioningState'
          az group list --query "[?name=='disneydemo2']" | jq '.[].properties.provisioningState'
          az vm list --query "[?name=='debianvm']" | jq '.[].provisioningState'
          az aks list --query "[?name=='aksdemoapril']" | jq '.[].provisioningState'

